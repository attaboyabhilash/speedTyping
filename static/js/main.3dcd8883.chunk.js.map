{"version":3,"sources":["App.js","index.js"],"names":["App","useState","count","setCount","time","setTime","words","setWords","isTimeRunning","setIsTimeRunning","inputRef","useRef","useEffect","setTimeout","prevTime","trim","split","filter","word","length","checkCount","className","ref","disabled","value","cols","rows","onChange","e","target","onClick","current","focus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAmEeA,EAjEH,WACV,IADgB,EAEUC,mBAAS,GAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGQF,mBAFF,GADN,mBAGTG,EAHS,KAGHC,EAHG,OAIUJ,mBAAS,IAJnB,mBAITK,EAJS,KAIFC,EAJE,OAK0BN,oBAAS,GALnC,mBAKTO,EALS,KAKMC,EALN,KAMVC,EAAWC,iBAAO,MA2CxB,OAXAC,qBAAU,WACLJ,GAAiBJ,EAAO,EACzBS,YAAW,WACTR,GAAQ,SAAAS,GAAQ,OAAIA,EAAW,OAC9B,KACa,IAATV,IATTK,GAAiB,GACjBN,EAfiB,SAACG,GAElB,OADeA,EAAMS,OAAOC,MAAM,KACpBC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAaC,OAajCC,CAAWd,OAYnB,CAACF,EAAMI,IAGR,sBAAKa,UAAU,MAAf,UACE,mDACA,uDACA,0BAAUC,IAAKZ,EAAUa,UAAWf,EAAegB,MAAOlB,EAAOmB,KAAK,KAAKC,KAAK,KAAKC,SAAU,SAACC,GAAD,OAAOrB,EAASqB,EAAEC,OAAOL,UACxH,sBAAKH,UAAU,QAAf,UACE,wBAAQS,QA/CA,WACT1B,EAAO,GACRC,GAAQ,SAAAS,GAAQ,OAAIA,EAAW,MA6C7B,eACA,8CAAiBV,EAAjB,UACA,wBAAQ0B,QA3CA,WACT1B,EAAO,IACRC,GAAQ,SAAAS,GAAQ,OAAIA,EAAW,MAyC7B,kBAEF,wBAAQS,SAAUf,EAAea,UAAWb,EAAgB,UAAY,SAAUsB,QAlCnE,WACjBrB,GAAiB,GACjBJ,EA1BoB,GA2BpBE,EAAS,IACTG,EAASqB,QAAQR,UAAW,EAC5Bb,EAASqB,QAAQC,SA6Bf,mBACA,qDAAwB9B,SCzD9B+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3dcd8883.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nconst App = () => {\n  const STARTING_TIME = 5\n  const [count, setCount] = useState(0)\n  const [time, setTime] = useState(STARTING_TIME)\n  const [words, setWords] = useState(\"\")\n  const [isTimeRunning, setIsTimeRunning] = useState(false)\n  const inputRef = useRef(null)\n\n  const decre = () => {\n    if(time > 1){\n      setTime(prevTime => prevTime - 1)\n    }\n  }\n\n  const incre = () => {\n    if(time < 20){\n      setTime(prevTime => prevTime + 1)\n    }\n  }\n\n  const checkCount = (words) => {\n    const array1 = words.trim().split(\" \")\n    return array1.filter(word => word !== \"\").length\n  }\n\n  const startClock = () => {\n    setIsTimeRunning(true)\n    setTime(STARTING_TIME)\n    setWords(\"\")\n    inputRef.current.disabled = false\n    inputRef.current.focus()\n  }\n\n  const stopClock = () => {\n    setIsTimeRunning(false)\n    setCount(checkCount(words))\n  }\n\n  useEffect(() => {\n    if(isTimeRunning && time > 0){\n      setTimeout(() => {\n        setTime(prevTime => prevTime - 1)\n      }, 1000)\n    }else if(time === 0){\n      stopClock()\n    }\n    // eslint-disable-next-line\n  }, [time, isTimeRunning])\n\n  return(\n    <div className=\"App\">\n      <h1>Speed Typing Test</h1>\n      <p>How fast can you type?</p>\n      <textarea ref={inputRef} disabled={!isTimeRunning} value={words} cols=\"50\" rows=\"10\" onChange={(e) => setWords(e.target.value)} />\n      <div className=\"timer\">\n        <button onClick={decre}>-</button>\n        <h4>Time Left : {time} sec</h4>\n        <button onClick={incre}>+</button>\n      </div>\n      <button disabled={isTimeRunning} className={isTimeRunning ? \"disable\" : \"normal\"} onClick={startClock}>Start</button>\n      <h3>Total word Count : {count}</h3>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}