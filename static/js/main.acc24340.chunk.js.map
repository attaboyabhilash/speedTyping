{"version":3,"sources":["contexts/typingContext.js","App.js","index.js"],"names":["TypingContext","startingTime","useState","count","setCount","time","setTime","words","setWords","isTimeRunning","setIsTimeRunning","inputRef","useRef","handleChange","e","target","value","decre","prevTime","incre","checkCount","trim","split","filter","word","length","startClock","current","disabled","focus","stopClock","useEffect","setTimeout","App","className","ref","rows","onChange","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAuDeA,EArDO,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACfC,mBAAS,GADM,mBAClCC,EADkC,KAC3BC,EAD2B,OAEjBF,mBAASD,GAFQ,mBAElCI,EAFkC,KAE5BC,EAF4B,OAGfJ,mBAAS,IAHM,mBAGlCK,EAHkC,KAG3BC,EAH2B,OAICN,oBAAS,GAJV,mBAIlCO,EAJkC,KAInBC,EAJmB,KAKnCC,EAAWC,iBAAO,MAElBC,EAAe,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOC,QAExCC,EAAQ,WACTZ,EAAO,GACRC,GAAQ,SAAAY,GAAQ,OAAIA,EAAW,MAI7BC,EAAQ,WACTd,EAAO,IACRC,GAAQ,SAAAY,GAAQ,OAAIA,EAAW,MAI7BE,EAAa,SAACb,GAElB,OADeA,EAAMc,OAAOC,MAAM,KACpBC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAaC,QAGtCC,EAAa,WACjBhB,GAAiB,GACjBJ,EAAQL,GACRO,EAAS,IACTG,EAASgB,QAAQC,UAAW,EAC5BjB,EAASgB,QAAQE,SAGbC,EAAY,WAChBpB,GAAiB,GACjBN,EAASgB,EAAWb,KActB,OAXAwB,qBAAU,WACLtB,GAAiBJ,EAAO,EACzB2B,YAAW,WACT1B,GAAQ,SAAAY,GAAQ,OAAIA,EAAW,OAC9B,KACa,IAATb,GACPyB,MAGD,CAACzB,EAAMI,IAEJ,CAAEE,WAAUR,QAAOE,OAAME,QAAOE,gBAAeI,eAAcM,QAAOF,QAAOS,eC9BtEO,EAnBH,WAAO,IAAD,EACiFjC,IAAzFW,EADQ,EACRA,SAAUR,EADF,EACEA,MAAOE,EADT,EACSA,KAAME,EADf,EACeA,MAAOE,EADtB,EACsBA,cAAeI,EADrC,EACqCA,aAAcM,EADnD,EACmDA,MAAOF,EAD1D,EAC0DA,MAAOS,EADjE,EACiEA,WAEjF,OACE,sBAAKQ,UAAU,MAAf,UACE,mDACA,uDACA,0BAAUC,IAAKxB,EAAUiB,UAAWnB,EAAeO,MAAOT,EAAO6B,KAAK,KAAKC,SAAUxB,IACrF,sBAAKqB,UAAU,QAAf,UACE,wBAAQI,QAASrB,EAAjB,eACA,8CAAiBZ,EAAjB,UACA,wBAAQiC,QAASnB,EAAjB,kBAEF,wBAAQS,SAAUnB,EAAeyB,UAAWzB,EAAgB,UAAY,SAAU6B,QAASZ,EAA3F,mBACA,qDAAwBvB,SCZ9BoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.acc24340.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react'\r\n\r\nconst TypingContext = (startingTime = 10) => {\r\n    const [count, setCount] = useState(0)\r\n    const [time, setTime] = useState(startingTime)\r\n    const [words, setWords] = useState(\"\")\r\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\r\n    const inputRef = useRef(null)\r\n\r\n    const handleChange = (e) => setWords(e.target.value)\r\n  \r\n    const decre = () => {\r\n      if(time > 1){\r\n        setTime(prevTime => prevTime - 1)\r\n      }\r\n    }\r\n  \r\n    const incre = () => {\r\n      if(time < 20){\r\n        setTime(prevTime => prevTime + 1)\r\n      }\r\n    }\r\n  \r\n    const checkCount = (words) => {\r\n      const array1 = words.trim().split(\" \")\r\n      return array1.filter(word => word !== \"\").length\r\n    }\r\n  \r\n    const startClock = () => {\r\n      setIsTimeRunning(true)\r\n      setTime(startingTime)\r\n      setWords(\"\")\r\n      inputRef.current.disabled = false\r\n      inputRef.current.focus()\r\n    }\r\n  \r\n    const stopClock = () => {\r\n      setIsTimeRunning(false)\r\n      setCount(checkCount(words))\r\n    }\r\n  \r\n    useEffect(() => {\r\n      if(isTimeRunning && time > 0){\r\n        setTimeout(() => {\r\n          setTime(prevTime => prevTime - 1)\r\n        }, 1000)\r\n      }else if(time === 0){\r\n        stopClock()\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [time, isTimeRunning])\r\n\r\n    return{ inputRef, count, time, words, isTimeRunning, handleChange, incre, decre, startClock }\r\n}\r\n\r\nexport default TypingContext\r\n\r\n","import React from 'react'\nimport TypingContext from './contexts/typingContext'\n\nconst App = () => {\n  const { inputRef, count, time, words, isTimeRunning, handleChange, incre, decre, startClock  } = TypingContext()\n\n  return(\n    <div className=\"App\">\n      <h1>Speed Typing Test</h1>\n      <p>How fast can you type?</p>\n      <textarea ref={inputRef} disabled={!isTimeRunning} value={words} rows=\"10\" onChange={handleChange} />\n      <div className=\"timer\">\n        <button onClick={decre}>-</button>\n        <h4>Time Left : {time} sec</h4>\n        <button onClick={incre}>+</button>\n      </div>\n      <button disabled={isTimeRunning} className={isTimeRunning ? \"disable\" : \"normal\"} onClick={startClock}>Start</button>\n      <h3>Total word Count : {count}</h3>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}